syntax = "proto3";

message Message {
  oneof payload {
    FileOperation file_operation = 1;
    OkInfo ok_info = 2;
    ErrorInfo error_info = 3;
    SessionKey session_key = 4;
    RsaPublicKey rsa_public_key = 5;
  }
}

message FileOperation {
  enum Type {
    GET = 0;
    UPDATE = 1;
    DELETE = 2;
  }
  // Type of the operation. Set by the client, not set by the server.
  Type type = 1;
  // Initialization vector used to encrypt this message (filename and content).
  // A session key (known by both server and client) is used as a key in this
  // case.
  bytes message_encryption_init_vector = 2;
  // Initialization vector used to encrypt the content of the message. The
  // client's secret key, which is not known by the server, is used as a key in
  // this case. Necessary for client to decrypt the content after receiving it
  // from the server (the client doesn't save this initialization vectors).
  bytes content_encryption_init_vector = 3;
  bytes filename = 4;
  bytes content = 5;
}

message OkInfo {
  string description = 1;
}

message ErrorInfo {
  enum Type {
    FILE_NOT_FOUND = 0;
    NO_VALID_SESSION_KEY = 1;
    NO_VALID_RSA_PUBLIC_KEY = 2;
    MESSAGE_CORRUPTED = 3;
    UNEXPECTED_MESSAGE = 4;
  }
  Type type = 1;
  string description = 2;
}

message SessionKey {
  bytes encryption_key = 1;
  int64 expiration_time = 3;
}

message RsaPublicKey {
  bytes key = 1;
}
